/*
 * This file is generated by jOOQ.
 */
package com.zenith.database.dto.tables.records;


import com.zenith.database.dto.tables.Restarts;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RestartsRecord extends UpdatableRecordImpl<RestartsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.restarts.time</code>.
     */
    public RestartsRecord setTime(OffsetDateTime value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.restarts.time</code>.
     */
    public OffsetDateTime getTime() {
        return (OffsetDateTime) get(0);
    }

    /**
     * Setter for <code>public.restarts.id</code>.
     */
    public RestartsRecord setId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.restarts.id</code>.
     */
    public Integer getId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RestartsRecord
     */
    public RestartsRecord() {
        super(Restarts.RESTARTS);
    }

    /**
     * Create a detached, initialised RestartsRecord
     */
    public RestartsRecord(OffsetDateTime time, Integer id) {
        super(Restarts.RESTARTS);

        setTime(time);
        setId(id);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RestartsRecord
     */
    public RestartsRecord(com.zenith.database.dto.tables.pojos.Restarts value) {
        super(Restarts.RESTARTS);

        if (value != null) {
            setTime(value.getTime());
            setId(value.getId());
            resetChangedOnNotNull();
        }
    }
}
